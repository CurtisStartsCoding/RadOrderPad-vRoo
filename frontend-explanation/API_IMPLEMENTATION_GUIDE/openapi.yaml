openapi: 3.1.0
info:
  title: RadOrderPad API
  description: |
    API for the RadOrderPad application, which facilitates radiology order management, 
    validation, and communication between referring physicians and radiology groups.
  version: 1.0.0
  contact:
    name: RadOrderPad Support
    email: support@radorderpad.com

servers:
  - url: /api
    description: Base API path

components:
  securitySchemes:
    jwtBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from login or registration

  schemas:
    # Authentication schemas
    UserRegistrationDTO:
      type: object
      required:
        - email
        - password
        - first_name
        - last_name
        - role
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
          minLength: 8
        first_name:
          type: string
        last_name:
          type: string
        role:
          type: string
          enum: [admin_referring, admin_radiology, physician, admin_staff, radiologist, scheduler, super_admin]
        organization_id:
          type: integer
          format: int64
        npi:
          type: string
        specialty:
          type: string
        phone_number:
          type: string

    OrganizationRegistrationDTO:
      type: object
      required:
        - name
        - type
      properties:
        name:
          type: string
        type:
          type: string
          enum: [referring_practice, radiology_group]
        npi:
          type: string
        tax_id:
          type: string
        address_line1:
          type: string
        address_line2:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
        phone_number:
          type: string
        fax_number:
          type: string
        contact_email:
          type: string
        website:
          type: string
        registration_key:
          type: string

    RegistrationRequest:
      type: object
      required:
        - organization
        - user
        - captchaToken
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationRegistrationDTO'
        user:
          $ref: '#/components/schemas/UserRegistrationDTO'
        captchaToken:
          type: string

    RegistrationResponse:
      type: object
      properties:
        token:
          type: string
        user:
          $ref: '#/components/schemas/UserResponse'
        organization:
          $ref: '#/components/schemas/Organization'
        message:
          type: string

    UserLoginDTO:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    LoginResponse:
      type: object
      properties:
        token:
          type: string
        user:
          $ref: '#/components/schemas/UserResponse'

    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string
        role:
          type: string
          enum: [admin_referring, admin_radiology, physician, admin_staff, radiologist, scheduler, super_admin]
        organization_id:
          type: integer
          format: int64
        npi:
          type: string
        specialty:
          type: string
        is_active:
          type: boolean
        email_verified:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Organization:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: string
          enum: [referring_practice, radiology_group]
        npi:
          type: string
        tax_id:
          type: string
        address_line1:
          type: string
        address_line2:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
        phone_number:
          type: string
        fax_number:
          type: string
        contact_email:
          type: string
        website:
          type: string
        logo_url:
          type: string
        billing_id:
          type: string
        credit_balance:
          type: number
        subscription_tier:
          type: string
        status:
          type: string
          enum: [active, on_hold, purgatory, terminated, pending_verification]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    OrganizationResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: string
          enum: [referring_practice, radiology_group]
        npi:
          type: string
        address_line1:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
        phone_number:
          type: string
        contact_email:
          type: string
        website:
          type: string
        logo_url:
          type: string
        status:
          type: string
          enum: [active, on_hold, purgatory, terminated, pending_verification]
        created_at:
          type: string
          format: date-time

    # Order validation schemas
    PatientInfo:
      type: object
      required:
        - firstName
        - lastName
        - dateOfBirth
        - gender
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
          format: date
        gender:
          type: string
        mrn:
          type: string
        pidn:
          type: string
          description: Patient Identifier Number (e.g., P12345, P-98765, P00123)

    OrderValidationRequest:
      type: object
      required:
        - dictationText
      properties:
        dictationText:
          type: string
          description: The clinical dictation text from the physician
        patientInfo:
          $ref: '#/components/schemas/PatientInfo'
        orderId:
          type: integer
          format: int64
          description: Present on attempts after the first
        isOverrideValidation:
          type: boolean
          description: Set to true for override validation
        radiologyOrganizationId:
          type: integer
          format: int64

    ValidationResult:
      type: object
      properties:
        validationStatus:
          type: string
          enum: [appropriate, inappropriate, needs_clarification, override]
        complianceScore:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Numerical score reflecting appropriateness (0-1)
        feedback:
          type: string
          description: Textual explanation and educational content
        suggestedICD10Codes:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              description:
                type: string
              confidence:
                type: number
                format: float
        suggestedCPTCodes:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              description:
                type: string
              confidence:
                type: number
                format: float
        internalReasoning:
          type: string
          description: Internal reasoning for the validation result (may not be present in all responses)

    ValidationResponse:
      type: object
      properties:
        success:
          type: boolean
        orderId:
          type: integer
          format: int64
        validationResult:
          $ref: '#/components/schemas/ValidationResult'

    # Order finalization schemas
    OrderFinalizationRequest:
      type: object
      required:
        - finalValidationStatus
        - finalComplianceScore
        - finalICD10Codes
        - finalICD10CodeDescriptions
        - finalCPTCode
        - finalCPTCodeDescription
        - clinicalIndication
      properties:
        finalValidationStatus:
          type: string
          enum: [appropriate, inappropriate, needs_clarification, override]
        finalComplianceScore:
          type: integer
          format: int32
        finalICD10Codes:
          type: string
        finalICD10CodeDescriptions:
          type: string
        finalCPTCode:
          type: string
        finalCPTCodeDescription:
          type: string
        clinicalIndication:
          type: string
        isTemporaryPatient:
          type: boolean
        patientInfo:
          $ref: '#/components/schemas/PatientInfo'
        overridden:
          type: boolean
        overrideJustification:
          type: string
        isUrgentOverride:
          type: boolean
        signatureData:
          type: string

    OrderFinalizationResponse:
      type: object
      properties:
        success:
          type: boolean
        orderId:
          type: integer
          format: int64
        message:
          type: string

    # Error response
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
        status:
          type: integer
          format: int32

paths:
  # Authentication endpoints
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register a new organization and admin user
      description: Creates a new organization and admin user account
      operationId: registerOrganization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
      responses:
        '201':
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Email already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/login:
    post:
      tags:
        - Auth
      summary: Login a user
      description: Authenticates a user and returns a JWT token
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginDTO'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Order endpoints
  /orders:
    get:
      tags:
        - Orders
      summary: List orders
      description: Retrieves a list of orders for the current user's organization with optional filtering
      operationId: listOrders
      security:
        - jwtBearerAuth: []
      parameters:
        - name: status
          in: query
          description: Filter by order status
          schema:
            type: string
            enum: [pending_admin, pending_validation, all]
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          schema:
            type: integer
            default: 20
        - name: sortBy
          in: query
          description: Field to sort by
          schema:
            type: string
            default: created_at
        - name: sortOrder
          in: query
          description: Sort direction
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                        order_number:
                          type: string
                        patient_id:
                          type: integer
                          format: int64
                        referring_organization_id:
                          type: integer
                          format: int64
                        radiology_organization_id:
                          type: integer
                          format: int64
                        status:
                          type: string
                        priority:
                          type: string
                          enum: [routine, stat]
                        modality:
                          type: string
                        body_part:
                          type: string
                        final_cpt_code:
                          type: string
                        final_validation_status:
                          type: string
                        final_compliance_score:
                          type: number
                          format: float
                        patient_name:
                          type: string
                        patient_dob:
                          type: string
                          format: date
                        patient_gender:
                          type: string
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      pages:
                        type: integer
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Order validation endpoint
  /orders/validate:
    post:
      tags:
        - Orders
      summary: Validate an order
      description: Validates a radiology order based on dictation text
      operationId: validateOrder
      security:
        - jwtBearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderValidationRequest'
      responses:
        '200':
          description: Validation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: Validation service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Order details and finalization endpoint
  /orders/{orderId}:
    get:
      tags:
        - Orders
      summary: Get order details
      description: Retrieves detailed information about a specific order
      operationId: getOrderDetails
      security:
        - jwtBearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the order to retrieve
      responses:
        '200':
          description: Order details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  order_number:
                    type: string
                  patient_id:
                    type: integer
                    format: int64
                  referring_organization_id:
                    type: integer
                    format: int64
                  radiology_organization_id:
                    type: integer
                    format: int64
                  status:
                    type: string
                  priority:
                    type: string
                    enum: [routine, stat]
                  modality:
                    type: string
                  body_part:
                    type: string
                  final_cpt_code:
                    type: string
                  final_validation_status:
                    type: string
                  final_compliance_score:
                    type: number
                    format: float
                  patient_name:
                    type: string
                  patient_dob:
                    type: string
                    format: date
                  patient_gender:
                    type: string
                  dictation:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Admin order endpoints
  /admin/orders/queue:
    get:
      tags:
        - Admin Orders
      summary: List orders awaiting admin finalization
      description: Retrieves a list of orders awaiting admin finalization (status = 'pending_admin') for the current user's organization
      operationId: listOrdersAwaitingAdminFinalization
      security:
        - jwtBearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          schema:
            type: integer
            default: 20
        - name: sortBy
          in: query
          description: Field to sort by
          schema:
            type: string
            default: created_at
        - name: sortOrder
          in: query
          description: Sort direction
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: patientName
          in: query
          description: Filter by patient name
          schema:
            type: string
        - name: physicianName
          in: query
          description: Filter by referring physician name
          schema:
            type: string
        - name: dateFrom
          in: query
          description: Filter by created date from (ISO format)
          schema:
            type: string
            format: date
        - name: dateTo
          in: query
          description: Filter by created date to (ISO format)
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int64
                        order_number:
                          type: string
                        patient_name:
                          type: string
                        patient_dob:
                          type: string
                          format: date
                        patient_gender:
                          type: string
                        referring_physician_name:
                          type: string
                        modality:
                          type: string
                        body_part:
                          type: string
                        laterality:
                          type: string
                        final_cpt_code:
                          type: string
                        final_cpt_code_description:
                          type: string
                        final_icd10_codes:
                          type: string
                        final_icd10_code_descriptions:
                          type: string
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
                      pages:
                        type: integer
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Orders
      summary: Finalize an order
      description: Finalizes a radiology order with validation results and signature
      operationId: finalizeOrder
      security:
        - jwtBearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: ID of the order to finalize
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderFinalizationRequest'
      responses:
        '200':
          description: Order finalized successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderFinalizationResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Organizations endpoints
  /organizations/mine:
    get:
      tags:
        - Organizations
      summary: Get user's own organization
      description: Returns the organization details for the authenticated user
      operationId: getMyOrganization
      security:
        - jwtBearerAuth: []
      responses:
        '200':
          description: Organization details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    put:
      tags:
        - Organizations
      summary: Update user's own organization
      description: Updates the organization details for the authenticated user
      operationId: updateMyOrganization
      security:
        - jwtBearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRegistrationDTO'
      responses:
        '200':
          description: Organization updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Users endpoints
  /users/me:
    get:
      tags:
        - Users
      summary: Get user profile
      description: Returns the user profile for the authenticated user
      operationId: getMyProfile
      security:
        - jwtBearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'